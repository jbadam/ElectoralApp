@using ElectoralApp.Models;
@model UserModel
@{
    ViewBag.Title = "NewUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
</head>
<body>
    <div class="br-mainpanel">
        <div class="br-pageheader pd-y-15 pd-md-l-20">
            <nav class="breadcrumb pd-0 mg-0 tx-12">
                <a class="breadcrumb-item" href="#">Home</a>
                <span class="breadcrumb-item active">Agent Profile</span>
            </nav>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="br-pagebody">
                <div class="br-section-wrapper">
                    <h6 class="tx-gray-800 tx-uppercase tx-bold tx-14 mg-b-10">Create Profile</h6>
                    <div class="form-layout form-layout-6">
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Firstname:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Lastname:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Relation:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.Relation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Relation Firstname:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.RelationFirstname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RelationFirstname, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Relation Lastname:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.RelationLasttname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RelationLasttname, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Gender:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Age:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                EPIC ID:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.EpicId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EpicId, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Address:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Community Name:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.DropDownListFor(model => model.CommunityID, new SelectList(Model.CommunityList, "Value", "Text"), "Select Community")
                                @Html.ValidationMessageFor(model => model.CommunityID, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                PollingBooth:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.DropDownListFor(model => model.PollingBoothID, new SelectList(Model.PollingboothList, "Value", "Text"), "Select Polling booth")
                                @Html.ValidationMessageFor(model => model.CommunityID, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Mobile1:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Mobile2:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.AltMobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AltMobileNo, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Email:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Assembly Constituency:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.DropDownListFor(model => model.AssemblyConstituencyNo, new SelectList(Model.AssemblyConstituencies, "Value", "Text"), "Select Assembly Costituencies")
                            </div><!-- col-8 -->
                        </div>

                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                State:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.DropDownListFor(model => model.StateID, new SelectList(Model.States, "Value", "Text"), "Select State")
                            </div><!-- col-8 -->
                        </div>

                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Status:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.DropDownListFor(model => model.Active, new SelectList(Enum.GetValues(typeof(Status))), "Select Status")
                            </div><!-- col-8 -->
                        </div>
                        <div class="row no-gutters">
                            <div class="col-5 col-sm-4">
                                Roles:
                            </div><!-- col-4 -->
                            <div class="col-7 col-sm-8">
                                @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.RolesList, "Value","Text"), "Select Role")
                            </div><!-- col-8 -->
                        </div>

                        <div class="form-layout-footer mt-4">
                            <button class="btn btn-info" type="submit">Submit Form</button>
                            <button class="btn btn-secondary"  onclick="@Url.Action("index", "Login")">Cancel</button>
                        </div>
                    </div><!-- form-layout -->
                </div><!-- br-section-wrapper -->
            </div><!-- br-pagebody -->
        }
    </div><!-- br-mainpanel -->

</body>
</html>
