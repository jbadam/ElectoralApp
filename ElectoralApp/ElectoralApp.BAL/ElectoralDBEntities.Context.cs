//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectoralApp.BAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ElectoralDBEntities : DbContext
    {
        public ElectoralDBEntities()
            : base("name=ElectoralDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblAssemblyConstituency> tblAssemblyConstituencies { get; set; }
        public virtual DbSet<tblCaste> tblCastes { get; set; }
        public virtual DbSet<tblCity> tblCities { get; set; }
        public virtual DbSet<tblCommunity> tblCommunities { get; set; }
        public virtual DbSet<tblCommunityCordinator> tblCommunityCordinators { get; set; }
        public virtual DbSet<tblCommunityType> tblCommunityTypes { get; set; }
        public virtual DbSet<tblDistrict> tblDistricts { get; set; }
        public virtual DbSet<tblElectoralRoll> tblElectoralRolls { get; set; }
        public virtual DbSet<tblMandal> tblMandals { get; set; }
        public virtual DbSet<tblParliamentConstituency> tblParliamentConstituencies { get; set; }
        public virtual DbSet<tblPoliticalParty> tblPoliticalParties { get; set; }
        public virtual DbSet<tblPollingStation> tblPollingStations { get; set; }
        public virtual DbSet<tblPollingStationSection> tblPollingStationSections { get; set; }
        public virtual DbSet<tblPrivilege> tblPrivileges { get; set; }
        public virtual DbSet<tblRequestAttribute> tblRequestAttributes { get; set; }
        public virtual DbSet<tblRequestType> tblRequestTypes { get; set; }
        public virtual DbSet<tblRole> tblRoles { get; set; }
        public virtual DbSet<tblRolePrivilege> tblRolePrivileges { get; set; }
        public virtual DbSet<tblState> tblStates { get; set; }
        public virtual DbSet<tblSubCaste> tblSubCastes { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<tblUserRole> tblUserRoles { get; set; }
        public virtual DbSet<tblUserVisit> tblUserVisits { get; set; }
        public virtual DbSet<tblVoter> tblVoters { get; set; }
        public virtual DbSet<tblVoter_Stage_old> tblVoter_Stage_old { get; set; }
        public virtual DbSet<tblVoterExt> tblVoterExts { get; set; }
        public virtual DbSet<tblVoterRequest> tblVoterRequests { get; set; }
        public virtual DbSet<tblVoterRequestExt> tblVoterRequestExts { get; set; }
        public virtual DbSet<tblVoterType> tblVoterTypes { get; set; }
        public virtual DbSet<tblWard> tblWards { get; set; }
        public virtual DbSet<tblSetting> tblSettings { get; set; }
        public virtual DbSet<tblLastName> tblLastNames { get; set; }
        public virtual DbSet<vw_Get_Voter_Search_Data> vw_Get_Voter_Search_Data { get; set; }
    
        public virtual ObjectResult<Admin_CreateUser_Result> Admin_CreateUser(Nullable<long> loginUserId, string userDataJsonstr)
        {
            var loginUserIdParameter = loginUserId.HasValue ?
                new ObjectParameter("loginUserId", loginUserId) :
                new ObjectParameter("loginUserId", typeof(long));
    
            var userDataJsonstrParameter = userDataJsonstr != null ?
                new ObjectParameter("userDataJsonstr", userDataJsonstr) :
                new ObjectParameter("userDataJsonstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_CreateUser_Result>("Admin_CreateUser", loginUserIdParameter, userDataJsonstrParameter);
        }
    
        public virtual ObjectResult<Admin_GetCities_Result> Admin_GetCities(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetCities_Result>("Admin_GetCities", userIdParameter);
        }
    
        public virtual ObjectResult<Admin_GetStates_Result> Admin_GetStates(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetStates_Result>("Admin_GetStates", userIdParameter);
        }
    
        public virtual ObjectResult<Admin_GetStates_Cities_Result> Admin_GetStates_Cities(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetStates_Cities_Result>("Admin_GetStates_Cities", userIdParameter);
        }
    
        public virtual ObjectResult<Admin_GetUserList_Result> Admin_GetUserList(Nullable<long> userId, string fname, string lname, string mobileno, Nullable<int> stateId, Nullable<long> cityId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("mobileno", mobileno) :
                new ObjectParameter("mobileno", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("stateId", stateId) :
                new ObjectParameter("stateId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("cityId", cityId) :
                new ObjectParameter("cityId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetUserList_Result>("Admin_GetUserList", userIdParameter, fnameParameter, lnameParameter, mobilenoParameter, stateIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Admin_UpdateUser_Result> Admin_UpdateUser(Nullable<long> userId, Nullable<long> loginUserId, string userDataJsonstr)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            var loginUserIdParameter = loginUserId.HasValue ?
                new ObjectParameter("loginUserId", loginUserId) :
                new ObjectParameter("loginUserId", typeof(long));
    
            var userDataJsonstrParameter = userDataJsonstr != null ?
                new ObjectParameter("userDataJsonstr", userDataJsonstr) :
                new ObjectParameter("userDataJsonstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_UpdateUser_Result>("Admin_UpdateUser", userIdParameter, loginUserIdParameter, userDataJsonstrParameter);
        }
    
        public virtual ObjectResult<Admin_UserinfoByUserId_Result> Admin_UserinfoByUserId(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_UserinfoByUserId_Result>("Admin_UserinfoByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<Admin_UserpageDropdowndata_Result> Admin_UserpageDropdowndata(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_UserpageDropdowndata_Result>("Admin_UserpageDropdowndata", userIdParameter);
        }
    
        public virtual ObjectResult<GetCitiesByACno_Result> GetCitiesByACno(Nullable<int> aCId)
        {
            var aCIdParameter = aCId.HasValue ?
                new ObjectParameter("ACId", aCId) :
                new ObjectParameter("ACId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCitiesByACno_Result>("GetCitiesByACno", aCIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetConstituenciesByUserId(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetConstituenciesByUserId", userIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int uspFetchVoters(string voterFirstName, string voterLastName, string rLName, string voterEPICNo, string voterOldEPICNo, string voterAddress, string voterMobile, Nullable<int> voterAge, string voterRLFName, string voterCity, string voterCommunity, Nullable<bool> useSoundex, Nullable<int> ageMargin, Nullable<int> electRollId, Nullable<int> assyConstId)
        {
            var voterFirstNameParameter = voterFirstName != null ?
                new ObjectParameter("VoterFirstName", voterFirstName) :
                new ObjectParameter("VoterFirstName", typeof(string));
    
            var voterLastNameParameter = voterLastName != null ?
                new ObjectParameter("VoterLastName", voterLastName) :
                new ObjectParameter("VoterLastName", typeof(string));
    
            var rLNameParameter = rLName != null ?
                new ObjectParameter("RLName", rLName) :
                new ObjectParameter("RLName", typeof(string));
    
            var voterEPICNoParameter = voterEPICNo != null ?
                new ObjectParameter("VoterEPICNo", voterEPICNo) :
                new ObjectParameter("VoterEPICNo", typeof(string));
    
            var voterOldEPICNoParameter = voterOldEPICNo != null ?
                new ObjectParameter("VoterOldEPICNo", voterOldEPICNo) :
                new ObjectParameter("VoterOldEPICNo", typeof(string));
    
            var voterAddressParameter = voterAddress != null ?
                new ObjectParameter("VoterAddress", voterAddress) :
                new ObjectParameter("VoterAddress", typeof(string));
    
            var voterMobileParameter = voterMobile != null ?
                new ObjectParameter("VoterMobile", voterMobile) :
                new ObjectParameter("VoterMobile", typeof(string));
    
            var voterAgeParameter = voterAge.HasValue ?
                new ObjectParameter("VoterAge", voterAge) :
                new ObjectParameter("VoterAge", typeof(int));
    
            var voterRLFNameParameter = voterRLFName != null ?
                new ObjectParameter("VoterRLFName", voterRLFName) :
                new ObjectParameter("VoterRLFName", typeof(string));
    
            var voterCityParameter = voterCity != null ?
                new ObjectParameter("VoterCity", voterCity) :
                new ObjectParameter("VoterCity", typeof(string));
    
            var voterCommunityParameter = voterCommunity != null ?
                new ObjectParameter("VoterCommunity", voterCommunity) :
                new ObjectParameter("VoterCommunity", typeof(string));
    
            var useSoundexParameter = useSoundex.HasValue ?
                new ObjectParameter("UseSoundex", useSoundex) :
                new ObjectParameter("UseSoundex", typeof(bool));
    
            var ageMarginParameter = ageMargin.HasValue ?
                new ObjectParameter("AgeMargin", ageMargin) :
                new ObjectParameter("AgeMargin", typeof(int));
    
            var electRollIdParameter = electRollId.HasValue ?
                new ObjectParameter("ElectRollId", electRollId) :
                new ObjectParameter("ElectRollId", typeof(int));
    
            var assyConstIdParameter = assyConstId.HasValue ?
                new ObjectParameter("AssyConstId", assyConstId) :
                new ObjectParameter("AssyConstId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspFetchVoters", voterFirstNameParameter, voterLastNameParameter, rLNameParameter, voterEPICNoParameter, voterOldEPICNoParameter, voterAddressParameter, voterMobileParameter, voterAgeParameter, voterRLFNameParameter, voterCityParameter, voterCommunityParameter, useSoundexParameter, ageMarginParameter, electRollIdParameter, assyConstIdParameter);
        }
    
        public virtual ObjectResult<uspFetchVoters_Old_Result> uspFetchVoters_Old(string voterFirstName, string voterLastName, string rLName, string voterEPICNo, string voterOldEPICNo, string voterAddress, string voterMobile, Nullable<int> voterAge, string voterRLFName, string voterCity, string voterCommunity, Nullable<bool> useSoundex, Nullable<int> ageMargin, Nullable<int> electRollId, Nullable<int> assyConstId)
        {
            var voterFirstNameParameter = voterFirstName != null ?
                new ObjectParameter("VoterFirstName", voterFirstName) :
                new ObjectParameter("VoterFirstName", typeof(string));
    
            var voterLastNameParameter = voterLastName != null ?
                new ObjectParameter("VoterLastName", voterLastName) :
                new ObjectParameter("VoterLastName", typeof(string));
    
            var rLNameParameter = rLName != null ?
                new ObjectParameter("RLName", rLName) :
                new ObjectParameter("RLName", typeof(string));
    
            var voterEPICNoParameter = voterEPICNo != null ?
                new ObjectParameter("VoterEPICNo", voterEPICNo) :
                new ObjectParameter("VoterEPICNo", typeof(string));
    
            var voterOldEPICNoParameter = voterOldEPICNo != null ?
                new ObjectParameter("VoterOldEPICNo", voterOldEPICNo) :
                new ObjectParameter("VoterOldEPICNo", typeof(string));
    
            var voterAddressParameter = voterAddress != null ?
                new ObjectParameter("VoterAddress", voterAddress) :
                new ObjectParameter("VoterAddress", typeof(string));
    
            var voterMobileParameter = voterMobile != null ?
                new ObjectParameter("VoterMobile", voterMobile) :
                new ObjectParameter("VoterMobile", typeof(string));
    
            var voterAgeParameter = voterAge.HasValue ?
                new ObjectParameter("VoterAge", voterAge) :
                new ObjectParameter("VoterAge", typeof(int));
    
            var voterRLFNameParameter = voterRLFName != null ?
                new ObjectParameter("VoterRLFName", voterRLFName) :
                new ObjectParameter("VoterRLFName", typeof(string));
    
            var voterCityParameter = voterCity != null ?
                new ObjectParameter("VoterCity", voterCity) :
                new ObjectParameter("VoterCity", typeof(string));
    
            var voterCommunityParameter = voterCommunity != null ?
                new ObjectParameter("VoterCommunity", voterCommunity) :
                new ObjectParameter("VoterCommunity", typeof(string));
    
            var useSoundexParameter = useSoundex.HasValue ?
                new ObjectParameter("UseSoundex", useSoundex) :
                new ObjectParameter("UseSoundex", typeof(bool));
    
            var ageMarginParameter = ageMargin.HasValue ?
                new ObjectParameter("AgeMargin", ageMargin) :
                new ObjectParameter("AgeMargin", typeof(int));
    
            var electRollIdParameter = electRollId.HasValue ?
                new ObjectParameter("ElectRollId", electRollId) :
                new ObjectParameter("ElectRollId", typeof(int));
    
            var assyConstIdParameter = assyConstId.HasValue ?
                new ObjectParameter("AssyConstId", assyConstId) :
                new ObjectParameter("AssyConstId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspFetchVoters_Old_Result>("uspFetchVoters_Old", voterFirstNameParameter, voterLastNameParameter, rLNameParameter, voterEPICNoParameter, voterOldEPICNoParameter, voterAddressParameter, voterMobileParameter, voterAgeParameter, voterRLFNameParameter, voterCityParameter, voterCommunityParameter, useSoundexParameter, ageMarginParameter, electRollIdParameter, assyConstIdParameter);
        }
    
        public virtual ObjectResult<uspGetConditionalDuplicateVoters_Result> uspGetConditionalDuplicateVoters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetConditionalDuplicateVoters_Result>("uspGetConditionalDuplicateVoters");
        }
    
        public virtual ObjectResult<uspGetDuplicateVoters_Result> uspGetDuplicateVoters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDuplicateVoters_Result>("uspGetDuplicateVoters");
        }
    
        public virtual ObjectResult<uspGetExactFirstNameSimilarLastName_Result> uspGetExactFirstNameSimilarLastName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetExactFirstNameSimilarLastName_Result>("uspGetExactFirstNameSimilarLastName");
        }
    
        public virtual ObjectResult<uspGetExactLastNameSimilarFirstName_Result> uspGetExactLastNameSimilarFirstName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetExactLastNameSimilarFirstName_Result>("uspGetExactLastNameSimilarFirstName");
        }
    
        public virtual ObjectResult<uspGetVoters_Result> uspGetVoters(string voterFirstName, string voterLastName, string rLName, string voterEPICNo, string voterOldEPICNo, string voterAddress, string voterMobile, Nullable<int> voterAge, string voterRLFName, Nullable<bool> useSoundex, Nullable<int> ageMargin, Nullable<int> electRollId, Nullable<int> assyConstId)
        {
            var voterFirstNameParameter = voterFirstName != null ?
                new ObjectParameter("VoterFirstName", voterFirstName) :
                new ObjectParameter("VoterFirstName", typeof(string));
    
            var voterLastNameParameter = voterLastName != null ?
                new ObjectParameter("VoterLastName", voterLastName) :
                new ObjectParameter("VoterLastName", typeof(string));
    
            var rLNameParameter = rLName != null ?
                new ObjectParameter("RLName", rLName) :
                new ObjectParameter("RLName", typeof(string));
    
            var voterEPICNoParameter = voterEPICNo != null ?
                new ObjectParameter("VoterEPICNo", voterEPICNo) :
                new ObjectParameter("VoterEPICNo", typeof(string));
    
            var voterOldEPICNoParameter = voterOldEPICNo != null ?
                new ObjectParameter("VoterOldEPICNo", voterOldEPICNo) :
                new ObjectParameter("VoterOldEPICNo", typeof(string));
    
            var voterAddressParameter = voterAddress != null ?
                new ObjectParameter("VoterAddress", voterAddress) :
                new ObjectParameter("VoterAddress", typeof(string));
    
            var voterMobileParameter = voterMobile != null ?
                new ObjectParameter("VoterMobile", voterMobile) :
                new ObjectParameter("VoterMobile", typeof(string));
    
            var voterAgeParameter = voterAge.HasValue ?
                new ObjectParameter("VoterAge", voterAge) :
                new ObjectParameter("VoterAge", typeof(int));
    
            var voterRLFNameParameter = voterRLFName != null ?
                new ObjectParameter("VoterRLFName", voterRLFName) :
                new ObjectParameter("VoterRLFName", typeof(string));
    
            var useSoundexParameter = useSoundex.HasValue ?
                new ObjectParameter("UseSoundex", useSoundex) :
                new ObjectParameter("UseSoundex", typeof(bool));
    
            var ageMarginParameter = ageMargin.HasValue ?
                new ObjectParameter("AgeMargin", ageMargin) :
                new ObjectParameter("AgeMargin", typeof(int));
    
            var electRollIdParameter = electRollId.HasValue ?
                new ObjectParameter("ElectRollId", electRollId) :
                new ObjectParameter("ElectRollId", typeof(int));
    
            var assyConstIdParameter = assyConstId.HasValue ?
                new ObjectParameter("AssyConstId", assyConstId) :
                new ObjectParameter("AssyConstId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVoters_Result>("uspGetVoters", voterFirstNameParameter, voterLastNameParameter, rLNameParameter, voterEPICNoParameter, voterOldEPICNoParameter, voterAddressParameter, voterMobileParameter, voterAgeParameter, voterRLFNameParameter, useSoundexParameter, ageMarginParameter, electRollIdParameter, assyConstIdParameter);
        }
    
        public virtual ObjectResult<uspGetVoters1_Result> uspGetVoters1(Nullable<int> assyConstId, Nullable<int> voterCityId, Nullable<int> voterWardId, Nullable<int> voterPollingBoothId)
        {
            var assyConstIdParameter = assyConstId.HasValue ?
                new ObjectParameter("AssyConstId", assyConstId) :
                new ObjectParameter("AssyConstId", typeof(int));
    
            var voterCityIdParameter = voterCityId.HasValue ?
                new ObjectParameter("VoterCityId", voterCityId) :
                new ObjectParameter("VoterCityId", typeof(int));
    
            var voterWardIdParameter = voterWardId.HasValue ?
                new ObjectParameter("VoterWardId", voterWardId) :
                new ObjectParameter("VoterWardId", typeof(int));
    
            var voterPollingBoothIdParameter = voterPollingBoothId.HasValue ?
                new ObjectParameter("VoterPollingBoothId", voterPollingBoothId) :
                new ObjectParameter("VoterPollingBoothId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetVoters1_Result>("uspGetVoters1", assyConstIdParameter, voterCityIdParameter, voterWardIdParameter, voterPollingBoothIdParameter);
        }
    
        public virtual int uspGetVotersNew(string voterFirstName, string voterLastName, string rLName, string voterEPICNo, string voterOldEPICNo, string voterAddress, string voterMobile, Nullable<int> voterAge, string voterRLFName, string voterCity, string voterCommunity, Nullable<bool> useSoundex, Nullable<int> ageMargin, Nullable<int> assyConstId)
        {
            var voterFirstNameParameter = voterFirstName != null ?
                new ObjectParameter("VoterFirstName", voterFirstName) :
                new ObjectParameter("VoterFirstName", typeof(string));
    
            var voterLastNameParameter = voterLastName != null ?
                new ObjectParameter("VoterLastName", voterLastName) :
                new ObjectParameter("VoterLastName", typeof(string));
    
            var rLNameParameter = rLName != null ?
                new ObjectParameter("RLName", rLName) :
                new ObjectParameter("RLName", typeof(string));
    
            var voterEPICNoParameter = voterEPICNo != null ?
                new ObjectParameter("VoterEPICNo", voterEPICNo) :
                new ObjectParameter("VoterEPICNo", typeof(string));
    
            var voterOldEPICNoParameter = voterOldEPICNo != null ?
                new ObjectParameter("VoterOldEPICNo", voterOldEPICNo) :
                new ObjectParameter("VoterOldEPICNo", typeof(string));
    
            var voterAddressParameter = voterAddress != null ?
                new ObjectParameter("VoterAddress", voterAddress) :
                new ObjectParameter("VoterAddress", typeof(string));
    
            var voterMobileParameter = voterMobile != null ?
                new ObjectParameter("VoterMobile", voterMobile) :
                new ObjectParameter("VoterMobile", typeof(string));
    
            var voterAgeParameter = voterAge.HasValue ?
                new ObjectParameter("VoterAge", voterAge) :
                new ObjectParameter("VoterAge", typeof(int));
    
            var voterRLFNameParameter = voterRLFName != null ?
                new ObjectParameter("VoterRLFName", voterRLFName) :
                new ObjectParameter("VoterRLFName", typeof(string));
    
            var voterCityParameter = voterCity != null ?
                new ObjectParameter("VoterCity", voterCity) :
                new ObjectParameter("VoterCity", typeof(string));
    
            var voterCommunityParameter = voterCommunity != null ?
                new ObjectParameter("VoterCommunity", voterCommunity) :
                new ObjectParameter("VoterCommunity", typeof(string));
    
            var useSoundexParameter = useSoundex.HasValue ?
                new ObjectParameter("UseSoundex", useSoundex) :
                new ObjectParameter("UseSoundex", typeof(bool));
    
            var ageMarginParameter = ageMargin.HasValue ?
                new ObjectParameter("AgeMargin", ageMargin) :
                new ObjectParameter("AgeMargin", typeof(int));
    
            var assyConstIdParameter = assyConstId.HasValue ?
                new ObjectParameter("AssyConstId", assyConstId) :
                new ObjectParameter("AssyConstId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetVotersNew", voterFirstNameParameter, voterLastNameParameter, rLNameParameter, voterEPICNoParameter, voterOldEPICNoParameter, voterAddressParameter, voterMobileParameter, voterAgeParameter, voterRLFNameParameter, voterCityParameter, voterCommunityParameter, useSoundexParameter, ageMarginParameter, assyConstIdParameter);
        }
    
        public virtual int Test_Vote()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_Vote");
        }
    
        public virtual int uspFindVoters(string fName)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspFindVoters", fNameParameter);
        }
    }
}
