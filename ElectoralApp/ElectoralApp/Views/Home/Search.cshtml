@using GridMvc.Html

@using ElectoralApp.Models;
@model SearchViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/lib/highlightjs/highlight.pack.js"></script>
<script src="~/Scripts/lib/select2/js/select2.min.js"></script>
<script src="~/Scripts/lib/jquery-toggles/toggles.min.js"></script>
<script src="~/Scripts/lib/jt.timepicker/jquery.timepicker.js"></script>
<script src="~/Scripts/lib/spectrum/spectrum.js"></script>
<script src="~/Scripts/lib/jquery.maskedinput/jquery.maskedinput.js"></script>
<script src="~/Scripts/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>
<script src="~/Scripts/lib/ion.rangeSlider/js/ion.rangeSlider.min.js"></script>
<script src="~/Scripts/lib/datatables/jquery.dataTables.js"></script>
<script src="~/Scripts/lib/datatables-responsive/dataTables.responsive.js"></script>

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

<script language="JavaScript" type="text/javascript">
    $(document).ready(function () {
        $('#AssemblyConstituencyNo').change(function () {
            $.ajax({
                type: "post",
                url: "/Home/GetCity",
                data: { acId: $('#AssemblyConstituencyNo').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var city = "<select id='VoterCity'>";
                    city = city + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        city = city + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    city = city + '</select>';
                    $('#VoterCity').html(city);
                }
            });
        });
    });
  
</script>
<html>
<head>

</head>
<body>
    <div class="br-mainpanel">
        <div class="br-pageheader pd-y-15 pd-l-20">
            <nav class="breadcrumb pd-0 mg-0 tx-12">
                <a class="breadcrumb-item" href="index.html">Bracket</a>
                <a class="breadcrumb-item" href="#">Search</a>
            </nav>
        </div><!-- br-pageheader -->
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="br-pagebody pd-x-30">
                <div class="row row-sm mg-t-20">
                    <div class="col-12">
                        <div class="card pd-0 bd-0 shadow-base">
                            <div class="pd-x-30 pd-t-30 pd-b-15">
                                <div class="table-wrapper">

                                    <div class="form-layout">
                                        <div class="row mg-b-25">
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label class="form-control-label">Assembly Constituency <span class="tx-danger">*</span></label>
                                                    @Html.DropDownListFor(model => model.AssemblyConstituencyNo, Model.AssemblyConstituency,"--Select Assembly Costituencies",new {@id= "AssemblyConstituencyNo" })
                                                </div>
                                            </div><!-- col-4 -->
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Voter City:</label>
                                                    @Html.DropDownListFor(model => model.VoterCity, new List<SelectListItem>(),"Select City",new { @id= "VoterCity" })
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">EPIC No: <span class="tx-danger"></span></label>
                                                    @Html.EditorFor(model => model.VoterEPICNo, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">First Name:</label>
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Last Name:</label>
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Relation Full Name:</label>
                                                    @Html.EditorFor(model => model.RLFName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Age:</label>
                                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Mobile:</label>
                                                    @Html.EditorFor(model => model.VoterMobile1, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>

                                        </div><!-- row -->

                                        <div class="form-layout-footer">
                                            <button class="btn btn-danger" type="submit">Search</button>
                                            <button class="btn btn-secondary" type="reset">Reset Search</button>
                                        </div><!-- form-layout-footer -->
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        }
        <div class="col-12 mt-2">
            <div class="card pd-0 bd-0 shadow-base">
                <div class="pd-x-30 pd-t-30 pd-b-15">

                    @Html.Grid(Model.ListData).Columns(columns =>
               {   
                   columns.Add(c => c.VoterEPICNo).Titled("EPIC No").Filterable(true);
                   columns.Add(c => c.FirstName).Titled("Name").Filterable(true);
                   columns.Add(c => c.RLFName).Titled("Relation Name").Filterable(true);
                   columns.Add(c => c.Age).Titled("Age").Filterable(true);
                   columns.Add(c => c.VoterMobile1).Titled("Mobile").Filterable(true);
                   columns.Add(c => c.VoterAddress).Titled("Adddress").Filterable(true);
                   columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(30)
                   // .RenderValueAs(o => Html.ActionLink("View", "View", new { id = o.VoterMobile1 }));
                   .RenderValueAs(d => Html.ActionLink("View", "ViewVoter", new { VoterId = d.VoterId }, new { @class = "modal-link" }));
               }).WithPaging(10).Sortable(true).Filterable(true)
                </div>
            </div>
        </div>



    </div>
</body>
</html>
