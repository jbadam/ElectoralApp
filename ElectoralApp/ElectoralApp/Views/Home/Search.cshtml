@using GridMvc.Html

@using ElectoralApp.Models;
@model SearchViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/lib/highlightjs/highlight.pack.js"></script>
<script src="~/Scripts/lib/select2/js/select2.min.js"></script>
<script src="~/Scripts/lib/jquery-toggles/toggles.min.js"></script>
<script src="~/Scripts/lib/jt.timepicker/jquery.timepicker.js"></script>
<script src="~/Scripts/lib/spectrum/spectrum.js"></script>
<script src="~/Scripts/lib/jquery.maskedinput/jquery.maskedinput.js"></script>
<script src="~/Scripts/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>
<script src="~/Scripts/lib/ion.rangeSlider/js/ion.rangeSlider.min.js"></script>
<script src="~/Scripts/lib/datatables/jquery.dataTables.js"></script>
<script src="~/Scripts/lib/datatables-responsive/dataTables.responsive.js"></script>

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<script>
    $(function () {
        'use strict'

        // Toggles
        $('.toggle').toggles({
            on: true,
            height: 35
        });

        // Input Masks
        $('#dateMask').mask('99/99/9999');
        $('#phoneMask').mask('(999) 999-9999');
        $('#ssnMask').mask('999-99-9999');

        // Datepicker
        $('.fc-datepicker').datepicker({
            showOtherMonths: true,
            selectOtherMonths: true
        });

        $('#datepickerNoOfMonths').datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            numberOfMonths: 2
        });

        // Time Picker
        $('#tpBasic').timepicker();
        $('#tp2').timepicker({ 'scrollDefault': 'now' });
        $('#tp3').timepicker();

        $('#setTimeButton').on('click', function () {
            $('#tp3').timepicker('setTime', new Date());
        });

        // Color picker
        $('#colorpicker').spectrum({
            color: '#17A2B8'
        });

        $('#showAlpha').spectrum({
            color: 'rgba(23,162,184,0.5)',
            showAlpha: true
        });

        $('#showPaletteOnly').spectrum({
            showPaletteOnly: true,
            showPalette: true,
            color: '#DC3545',
            palette: [
                ['#1D2939', '#fff', '#0866C6', '#23BF08', '#F49917'],
                ['#DC3545', '#17A2B8', '#6610F2', '#fa1e81', '#72e7a6']
            ]
        });


        // Rangeslider
        if ($().ionRangeSlider) {
            $('#rangeslider1').ionRangeSlider();

            $('#rangeslider2').ionRangeSlider({
                min: 100,
                max: 1000,
                from: 550
            });

            $('#rangeslider3').ionRangeSlider({
                type: 'double',
                grid: true,
                min: 0,
                max: 1000,
                from: 200,
                to: 800,
                prefix: '$'
            });

            $('#rangeslider4').ionRangeSlider({
                type: 'double',
                grid: true,
                min: -1000,
                max: 1000,
                from: -500,
                to: 500,
                step: 250
            });
        }

    });
</script>

<script>
    $(function () {
        'use strict';

        $('#datatable1').DataTable({
            responsive: true,
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '',
                lengthMenu: '_MENU_ items/page',
            }
        });

        $('#datatable2').DataTable({
            bLengthChange: false,
            searching: false,
            responsive: true
        });

        // Select2
        $('.dataTables_length select').select2({ minimumResultsForSearch: Infinity });

    });
</script>

<html>
<head>

</head>
<body>
    <div class="br-mainpanel">
        <div class="br-pageheader pd-y-15 pd-l-20">
            <nav class="breadcrumb pd-0 mg-0 tx-12">
                <a class="breadcrumb-item" href="index.html">Bracket</a>
                <a class="breadcrumb-item" href="#">Search</a>
            </nav>
        </div><!-- br-pageheader -->
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="br-pagebody pd-x-30">
                <div class="row row-sm mg-t-20">
                    <div class="col-12">
                        <div class="card pd-0 bd-0 shadow-base">
                            <div class="pd-x-30 pd-t-30 pd-b-15">
                                <div class="table-wrapper">

                                    <div class="form-layout">
                                        <div class="row mg-b-25">
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label class="form-control-label">Assembly Constituency <span class="tx-danger">*</span></label>
                                                    @Html.DropDownListFor(model => model.AssemblyConstituencyNo, new SelectList(Model.AssemblyConstituencies, "Value", "Text"), "Select Assembly Costituencies")
                                                </div>
                                            </div><!-- col-4 -->
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label class="form-control-label">Select Option<span class="tx-danger">*</span></label><br>
                                                    <div class="toggle-wrapper">
                                                        <div class="toggle toggle-modern primary"></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">EPIC No: <span class="tx-danger"></span></label>
                                                    @Html.EditorFor(model => model.VoterEPICNo, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Old EPIC: <span class="tx-danger">*</span></label>
                                                    @Html.EditorFor(model => model.VoterOldEPIC, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">First Name:</label>
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Last Name:</label>
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Relation First Name:</label>
                                                    @Html.EditorFor(model => model.RLFName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Relation Last Name:</label>
                                                    @Html.EditorFor(model => model.RLLName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Address:</label>
                                                    @Html.EditorFor(model => model.VoterAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>


                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Age:</label>
                                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Mobile:</label>
                                                    @Html.EditorFor(model => model.VoterMobile1, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Votor City:</label>
                                                    @Html.EditorFor(model => model.VoterCity, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Votor Community:</label>
                                                    @Html.EditorFor(model => model.VoterCommunity, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group mg-b-10-force">
                                                    <label class="form-control-label">Age Margin:</label>
                                                    @Html.EditorFor(model => model.AgeMargin, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                        </div><!-- row -->

                                        <div class="form-layout-footer">
                                            <button class="btn btn-danger" type="submit">Search</button>
                                            <button class="btn btn-secondary" type="reset">Reset Search</button>
                                        </div><!-- form-layout-footer -->
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        }
        <div class="col-12 mt-2">
            <div class="card pd-0 bd-0 shadow-base">
                <div class="pd-x-30 pd-t-30 pd-b-15">

                    @Html.Grid(Model.ListData).Columns(columns =>
               {
                   columns.Add(c => c.VoterEPICNo).Titled("EPIC No").Filterable(true);
                   columns.Add(c => c.FirstName).Titled("Name").Filterable(true);
                   columns.Add(c => c.RLFName).Titled("Relation Name").Filterable(true);
                   columns.Add(c => c.Age).Titled("Age").Filterable(true);
                   columns.Add(c => c.VoterMobile1).Titled("Mobile").Filterable(true);
                   columns.Add(c => c.VoterAddress).Titled("Adddress").Filterable(true);
                   columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(30)
                   // .RenderValueAs(o => Html.ActionLink("View", "View", new { id = o.VoterMobile1 }));
                   .RenderValueAs(d => Html.ActionLink("View Voter", "ViewVoter", new { Mobile = d.VoterMobile1 }, new { @class = "modal-link" }));
               }).WithPaging(10).Sortable(true).Filterable(true)
                </div>
            </div>
        </div>

       

    </div>
</body>
</html>
